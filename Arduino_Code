/* 

Wiring:

From  sensor, yellow goes to SCL and orange goes to SDA
*/

#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BNO055.h>
#include <utility/imumaths.h>
#include <Servo.h>
Adafruit_BNO055 bno = Adafruit_BNO055();

Servo myservo;
Servo myservo1;
float val;
float val1;


void setup(void)
{
  myservo.attach(9); // servo pin
  myservo1.attach(10); // servo1 pin
  
  Serial.begin(9600);

  /* Initialise the sensor */
  if(!bno.begin())
  {
    /* There was a problem detecting the BNO055 ... check your connections */
    Serial.print("Ooops, no BNO055 detected ... Check your wiring or I2C ADDR!");
    while(1);
  }
  
  delay(1000);
}


void loop(void)
{ 
  // Quaternion data
  imu::Quaternion quat = bno.getQuat();
  Serial.print("qW: ");
  Serial.print(quat.w());
  Serial.print(" qX: ");
  Serial.print(quat.y(), 4);
  Serial.print(" qY: ");
  Serial.print(quat.x(), 4);
  Serial.print(" qZ: ");
  Serial.print(quat.z(), 4);
  Serial.println("\t\t");

  /* Now we take the x compnent of the rotational motion and mep it to control the servo */
  if (quat.z() < .45 && quat.z() > -.14) 
  {
    val = quat.x() * 100;
    val = map(val, -70, 70, 0, 180);
  }
  else if (quat.z() > .45)
  {
    val = - (quat.y() * 100);
    val = map(val, -70, 70, 0, 180);
  }
  else
  {
    val = quat.y() * 100;
    val = map(val, -70, 70, 0, 180);
  }


  
  myservo.write(val);
  
  /* now the z-component */
  val1 = - (quat.z()) * 100;
  val1 = map(val1, -70, 70, 0, 180);
  myservo1.write(val1);

  delay(100);
}
